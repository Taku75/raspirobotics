<launch>
  <arg name="pi/2" value="1.5707963267948966"/>
  <arg name="camera_rotate" value="0 0 0 0 0 -$(arg pi/2)"/>
  <node name="world_to_camera" pkg="tf" type="static_transfrom_publisher" args="$(arg camera_rotate) world head_left_camera 10" output="screen"/>
  <group ns="stereo_camera">
    <node name="right" pkg="usb_cam" type="usb_cam_node" output="screen">
      <param name="video_device" value="/dev/video1"/>
      <param name="image_width" value="320"/>
      <param name="image_height" value="240"/>
      <param name="pixel_format" value="yuyv"/>
      <param name="camera_frame_id" value="head_right_camera"/>
      <param name="io_method" value="mmap"/>
      <param name="camera_info_url" value="file://$(find sim_lecture)/camera_param/right_camera.yaml" type="string"/>
    </node>

    <node name="left" pkg="usb_cam" type="usb_cam_node" output="screen">
      <param name="video_device" value="/dev/video0"/>
      <param name="image_width" value="320"/>
      <param name="image_height" value="240"/>
      <param name="pixel_format" value="yuyv"/>
      <param name="camera_frame_id" value="head_rleft_camera"/>
      <param name="io_method" value="mmap"/>
      <param name="camera_info_url" value="file://$(find sim_lecture)/camera_param/left_camera.yaml" type="string"/>
    </node>

    <node name="stereo_image_proc" pkg="stereo_image_proc" type="stereo_image_proc" args="_approximate_sync:=True" output="screen"/>
  </group>
</launch>
